#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// External Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////

#include "IComponent.h"

//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Constants and Enums
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////



//---------------------------------------------------------------------------------------------------------------
class TransformComponent : public IComponent {
public:
    sf::Vector2f position = { 0.f, 0.f };
    sf::Vector2f scale = { 1.0f, 1.0f };
    float rotation = 0.f;
};
//---------------------------------------------------------------------------------------------------------------



//---------------------------------------------------------------------------------------------------------------
class PhysicsComponent : public IComponent {
public:
    sf::Vector2f velocity;
    sf::Vector2f acceleration;
    float maxSpeed;
};
//---------------------------------------------------------------------------------------------------------------



//---------------------------------------------------------------------------------------------------------------
class SpriteComponent : public IComponent {
public:
    sf::Sprite sprite;
};
//---------------------------------------------------------------------------------------------------------------



//---------------------------------------------------------------------------------------------------------------
class TextComponent {
public:
    sf::Text text;
    sf::Font font;
    unsigned int characterSize;
    sf::Color color;
};
//---------------------------------------------------------------------------------------------------------------



//---------------------------------------------------------------------------------------------------------------
class ButtonComponent : public IComponent {
public:
    entt::entity entity;
    sf::FloatRect bounds;
    bool isHovered;
    bool isPressed;
    bool wasPressed;
    TextComponent textInfo;
    std::function<void()> onHovered;
    std::function<void()> onPressed;
    sf::Color colorNormal; 
    sf::Color colorHover;
};
//---------------------------------------------------------------------------------------------------------------
