#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// External Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////

#include "IScene.h"

//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Constants and Enums
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class GameScene : public IScene {
public:
    explicit GameScene(sf::RenderWindow& window);
    virtual ~GameScene() = default;

    // Public Functions

private:
    GameScene(const GameScene&) = delete;
    GameScene(GameScene &&) = delete;
    GameScene& operator=(const GameScene&) = delete;
    GameScene&& operator=(GameScene&&) = delete;

private:
    // Private Functions

private:
    sf::RenderWindow& m_window;
};