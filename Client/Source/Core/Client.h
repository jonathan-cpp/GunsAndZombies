#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// External Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Constants and Enums
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class Client {
public:
    explicit Client() = default;
    virtual ~Client() = default;

    // Public Functions

private:
    Client(const Client&) = delete;
    Client(Client &&) = delete;
    Client& operator=(const Client&) = delete;
    Client&& operator=(Client&&) = delete;

private:
    // Private Functions

private:
    // Member Variables

};