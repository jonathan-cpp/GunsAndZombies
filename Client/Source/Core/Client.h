#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////

#include <string>
#include <iostream>

//////////////////////////////////////////////////////////
// Thirdparty Headers
//////////////////////////////////////////////////////////

#include <SFML/Graphics.hpp>
#include <SFML/System.hpp>
#include <SFML/Network.hpp>

#include <entt/entt.hpp>

//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////

#include "Core.h"
#include "NetworkManager.h"
#include "SceneManager.h"

//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class Client {
public:
    Client();
    virtual ~Client() = default;

    void Run();

private:
    Client(const Client&) = delete;
    Client(Client &&) = delete;
    Client& operator=(const Client&) = delete;
    Client&& operator=(Client&&) = delete;

private:
    void handleEvent(const sf::Event& event); 

private:
    UniquePtr<NetworkManager> m_network;
    sf::RenderWindow m_window;
    SceneManager m_sceneManager;
};
