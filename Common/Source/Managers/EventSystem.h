#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// External Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Constants and Enums
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class Event { 
public:
    Event() = default;
    virtual ~Event() = default;
};

class EventListener {
public:
    virtual ~EventListener() = default;
    virtual void OnEvent(const Event& event) = 0;
};

class EventDispatcher {
public:
    EventDispatcher() = default;
    virtual ~EventDispatcher() = default;

    void AddEventListener(EventListener* listener);
    void RemoveEventListener(EventListener* listener);
    void DispatchEvent(const Event& event);
};