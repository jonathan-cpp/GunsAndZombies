#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////

#include <string>
#include <iostream>

//////////////////////////////////////////////////////////
// Thirdparty Headers
//////////////////////////////////////////////////////////

#include <SFML/Graphics.hpp>
#include <SFML/System.hpp>
#include <SFML/Network.hpp>

#include <entt/entt.hpp>

//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////

#include "Core.h"
#include "ServerNetwork.h"

//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class Server {
public:
    Server();
    virtual ~Server() = default;

    void Run();

private:
    Server(const Server&) = delete;
    Server(Server &&) = delete;
    Server& operator=(const Server&) = delete;
    Server&& operator=(Server&&) = delete;

private:
    UniquePtr<ServerNetwork> m_network;
};
