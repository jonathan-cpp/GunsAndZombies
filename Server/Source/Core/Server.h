#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// External Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Constants and Enums
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class Server {
public:
    explicit Server() = default;
    virtual ~Server() = default;

    // Public Functions

private:
    Server(const Server&) = delete;
    Server(Server &&) = delete;
    Server& operator=(const Server&) = delete;
    Server&& operator=(Server&&) = delete;

private:
    // Private Functions

private:
    // Member Variables

};